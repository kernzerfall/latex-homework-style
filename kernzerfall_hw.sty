%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%- kernzerfall's LaTeX Theme for Homework -%%%%
%%%%-                                        -%%%%
%%%%- Revision: R11-05.05.2025               -%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------ Requirements ------ %
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{kernzerfall_hw}[2025/05/05 kernzerfall's LaTeX theme for Homework]
\RequirePackage[hidelinks]{hyperref}
\RequirePackage{csvsimple-l3}
\RequirePackage{bookmark}
\RequirePackage{iftex}

% Use zref to link to arbitrary text by page number
% \hyperpageref -> \pagelabel
% https://tex.stackexchange.com/a/549807
\RequirePackage{zref-base,zref-user,zref-totpages}
\zref@newprop*{pagedest}[Doc-Start]{page.\@the@H@page}
\zref@addprop{main}{pagedest}
\newcommand\hyperpageref[1]{\hyperlink{\zref@extract{#1}{pagedest}}{\pageref*{#1}}}
\newcommand\pagelabel[1]{\label{#1}\zlabel{#1}}

% Injection of boilerplate, is also toggled as a dependency
% of some other options
\newif\if@kzflboilerplate\@kzflboilerplatefalse
\DeclareOption{boilerplate}{\@kzflboilerplatetrue}

% Injection of theorem environments
\newif\if@kzflthm\@kzflthmfalse
\DeclareOption{thm}{\@kzflthmtrue\@kzflboilerplatetrue}

% Enables section-based numbering for defined theorem environments
\newif\if@kzflthmsectnum\@kzflthmsectnumfalse
\DeclareOption{thmsectnum}{\@kzflthmsectnumtrue}

% Default layers for exercise sheets
\newif\if@kzfllayers\@kzfllayersfalse
\DeclareOption{layers}{\@kzfllayerstrue\@kzflboilerplatetrue}

% Git stuff. Only enable in git repositories to avoid errors
\newif\if@kzflgit\@kzflgitfalse
\DeclareOption{git}{\@kzflgittrue}

% Use english for tables, babel, etc
\newif\if@kzflenglish\@kzflenglishtrue
\DeclareOption{german}{\@kzflenglishfalse}

% Use the _awesome_ Minion Pro typeface
% Needs boilerplate, as it takes place in it
\newif\if@kzflmpro\@kzflmprofalse
\DeclareOption{minionpro}{\@kzflboilerplatetrue\@kzflmprotrue}

% ------ Inject boilerplate ------ %
\newcommand{\kzfl@injectboilerplate}{
    % Geometry
    \usepackage[a4paper, top=2cm, left=2cm, right=2cm, bottom=2.5cm]{geometry}

    % Math Symbols
    \usepackage{amsmath}
    \usepackage{mathtools}
    \usepackage{microtype}
    \usepackage{textcomp}
    \usepackage{stmaryrd}

    % Graphics
    \usepackage{tikz}
    \usepackage{pgfplots}
    \usepackage{subcaption}
    \usepackage{graphicx}
    \usepackage{pdfpages}

    \if@kzflenglish
        \usepackage[british]{babel}
    \else
        \usepackage[british, ngerman]{babel}
    \fi

    % (Later) Yoink some glyphs from AMSFonts, and Computer Modern
    \DeclareSymbolFont{AMSa}{U}{msa}{m}{n}
    \DeclareSymbolFont{lmsy}{OMS}{lmsy}{m}{n}

    % Font stuff
    \usepackage[T1]{fontenc}
    
    % Depending on if@mpro, switch to Minion Pro
    \if@kzflmpro
        % TT Font
        \usepackage[scale=0.95]{inconsolata}

        % Look at https://github.com/sebschub/FontPro to install this
        % The Minion Pro typeface itself needs to be licensed from Adobe
        \usepackage[
            mathlf,    % lining figures (i.e. _not_ oldstyle) in math
            swash,     % take cal letters from Minion Pro swash
            openg,     % italic g is open
            ]{MinionPro}
        \usepackage{MnSymbol}

        % LinBiolinum looks better than LMSS together with MPro
        \renewcommand{\sfdefault}{LinuxBiolinumT-OsF}
        \renewcommand{\sffamily}{\fontfamily{\sfdefault}\selectfont}
        \DeclareMathAlphabet{\mathsf}{OT1}{\sfdefault}{m}{n}
    \else
        \ifLuaTeX
            \usepackage{fontspec}
            \usepackage{unicode-math}
            \usepackage[osf,proportional]{libertinus}
            \setmonofont[
                Scale=MatchLowercase
            ]{inconsolata}
            \let\triangle\undefined
            \usepackage{MnSymbol}
        \else
            % I don't really support anything other than luatex, but
            % keep this here for completeness.
            \usepackage{newpxmath}
            \usepackage{newpxtext}
            \useosf
        \fi
    \fi

    % mathsf from lmss
    \DeclareMathAlphabet{\mathlmss}{\encodingdefault}{lmss}{m}{n}

    % Other
    \usepackage{scrlayer-scrpage}
    \usepackage[capitalize]{cleverref}
    \usepackage{draftwatermark}
    \usepackage{framed}
    \if@kzflenglish
        \usepackage[style=english]{csquotes}
    \else
        \usepackage[style=german]{csquotes}
    \fi

    % Colors
    \definecolor{codegreen}{rgb}{0,0.6,0}%
    \definecolor{codegray}{rgb}{0.5,0.5,0.5}%
    \definecolor{codepurple}{rgb}{0.58,0,0.82}%
    \definecolor{backcolour}{rgb}{0.95,0.95,0.92}%
    \definecolor{fosapblue}{RGB}{0,128,255}%
    \definecolor{fosappink}{RGB}{252,163,212}%

    % Default to no watermark, user can override this using the same command
    \DraftwatermarkOptions{
        scale=0, text={}
    }

    % KOMA classes have sf fonts in headers by default...
    \ifdef\chapter{
        \setkomafont{chapter}{\normalfont\huge}
        \setkomafont{section}{\normalfont\LARGE}
    }{
        \setkomafont{section}{\normalfont\Large}
    }

    \setkomafont{title}{\normalfont\huge}
    \setkomafont{subsection}{\normalfont\Large}
    \setkomafont{subsubsection}{\normalfont\large}
    \setkomafont{paragraph}{\normalfont\bfseries}
    \setkomafont{subparagraph}{\normalfont\bfseries}
}

% ------ Therorem stuff ------ %
\newcommand{\kzfl@injecttheorems}{
    % def/thm numbering
    \if@kzflmpro\else
        % newpxmath clashes with amsthm on openbox...
        \let\openbox\undefined
    \fi
    \usepackage[capitalize]{cleveref}
    \usepackage[amsmath, amsthm, thmmarks]{ntheorem}
    \theoremheaderfont{\normalfont\bfseries}
    \theorembodyfont{\normalfont}
    \theoremseparator{.}
    \newtheoremstyle{kzflthm}%
        {\item[%
            \hskip\labelsep\theorem@headerfont%
                ####1~####2%
            \theorem@separator]}%
        {\item[%
            \hskip\labelsep\theorem@headerfont%
                ####1~####2~~\normalfont(####3)%
            \theorem@separator]}
    \theoremstyle{kzflthm}
    \theoremsymbol{\ensuremath{\largetriangleup}}

    \if@kzflthmsectnum
        \newtheorem{definition}{Definition}[section]
    \else
        \newtheorem{definition}{Definition}
    \fi
    \newtheorem{thm}[definition]{Theorem}
    \newtheorem{satz}[definition]{Satz}
    \newtheorem{lemma}[definition]{Lemma}
    \newtheorem{kor}[definition]{Korollar}
    \newtheorem{block}[definition]{Block}
    \newtheorem{example}[definition]{Example}
    \newtheorem{claim}[definition]{Claim}
    \newtheorem{cor}[definition]{Corollary}
    \newtheorem{prop}[definition]{Proposition}

    \AddToHook{env/thm/begin}{\crefalias{definition}{theorem}}
    \AddToHook{env/lemma/begin}{\crefalias{definition}{lemma}}
    \AddToHook{env/cor/begin}{\crefalias{definition}{cor}}
    \AddToHook{env/prop/begin}{\crefalias{definition}{prop}}
    \AddToHook{env/claim/begin}{\crefalias{definition}{claim}}
    \AddToHook{env/example/begin}{\crefalias{definition}{example}}

    \Crefname{definition}{Definition}{Definitions}
    \crefname{definition}{definition}{definitions}
    \Crefname{thm}{Theorem}{Theorems}
    \crefname{thm}{theorem}{theorems}
    \Crefname{lemma}{Lemma}{Lemmata}
    \crefname{lemma}{lemma}{lemmata}
    \Crefname{cor}{Corollary}{Corollaries}
    \crefname{cor}{corollary}{corollaries}
    \Crefname{prop}{Proposition}{Propositions}
    \crefname{prop}{proposition}{propositions}
    \Crefname{claim}{Claim}{Claims}
    \crefname{claim}{claim}{claims}
}

% ------ Metadata ------ %
\AtBeginDocument{
    \hypersetup{bookmarksnumbered=true,%
    }
}

% A better \today macro with leading zeroes
\def\twodigits#1{\ifnum#1<10 0\fi\the#1}
\def\bettertoday{\leavevmode\hbox{\twodigits\day.\twodigits\month.\the\year}}

% ------ Maketitle ------ %
\DeclareOption{customtitle}{
    \renewcommand{\maketitle}%
    {%
        \title{\@class{} - \@assignment}%
        \hypersetup{%
            pdftitle={\@title},
        }%
        \begin{center}%
            \titlefont%
            \Large{\@class\hfill\@assignment} \\
            \large{\@semester\hfill\@titlemisc}\\
            \normalfont%
        \end{center}%
    }%
}


% ------ Complexity Stuff ------ %
\DeclareOption{complexity}{
    % Ex(ists configuration) path
    \newcommand{\expath}{\ensuremath{\stackrel\ast\to}}

    % Common Alphabet syms
    \newcommand{\sast}{\ensuremath{\Sigma^\ast}}
    \newcommand{\gast}{\ensuremath{\Gamma^\ast}}
    \newcommand{\gk}[1]{\ensuremath{\Gamma^{#1}}}

    % Configuration stuff
    \newcommand{\kinit}{\ensuremath{\kappa_{\text{init}}}}

    % Markers (mend = end marker, blk = blank)
    \newcommand{\mend}{\ensuremath{\triangleright}}
    \newcommand{\blk}{\ensuremath{\square}}

    % Classes
    \newcommand{\classO}[1]{\ensuremath{\mathcal{O}\left({#1}\right)}}
    \newcommand{\classDT}[1]{\ensuremath{\mathsf{DTIME}\left({#1}\right)}}
    \newcommand{\classP}{\ensuremath{\mathsf{P}}}
    \newcommand{\classE}{\ensuremath{\mathsf{E}}}
    \newcommand{\classEXPTIME}{\ensuremath{\mathsf{EXPTIME}}}
    \newcommand{\classNT}[1]{\ensuremath{\mathsf{NTIME}\left({#1}\right)}}
    \newcommand{\classNP}{\ensuremath{\mathsf{NP}}}
    \newcommand{\classNEXP}{\ensuremath{\mathsf{NEXP}}}
    \newcommand{\classEXP}{\ensuremath{\mathsf{EXP}}}
    \newcommand{\classPH}{\ensuremath{\mathsf{PH}}}
    \newcommand{\classPpoly}{\ensuremath{%
        \classP\!/_{\!\mathsf{poly}}%
    }}
    \newcommand{\coclass}[1]{\ensuremath{%
        \mathsf{co}\text{-}{#1}%
    }}
    \newcommand{\classPHsigma}[1]{\ensuremath{
        \Sigma^p_{#1}%
    }}
    \newcommand{\classPHpi}[1]{\ensuremath{
        \mathsf{\Pi}^p_{#1}%
    }}

    % Common states
    \newcommand{\qacc}{\ensuremath{q_{+}}}
    \newcommand{\qrej}{\ensuremath{q_{-}}}
    \newcommand{\qinit}{\ensuremath{q_{\text{init}}}}
}

% ------ Markov Chain and Decision Process Stuff ------ %
\DeclareOption{markov}{
    % Path sets
    \newcommand{\pathssymbol}{%
        \ensuremath{%
            \mathsf{Paths}%
        }%
    }

    % Set of all paths on (#2), optionally starting at [#1]
    \newcommand{\paths}[2][]{%
        \ensuremath{%
            \pathssymbol_{#2}%
            \Ifstr{#1}{}{}{\!\left(%
                    {#1}%
                \right)}%
        }%
    }

    % Set of paths on (#2), optionally starting at (#1)
    \newcommand{\pathsfin}[2][]{%
        \ensuremath{%
            \pathssymbol_{#2}^{<\omega}%
            \Ifstr{#1}{}{}{\!\left(%
                    {#1}%
                \right)}%
        }%
    }

    % Set of direct successors
    \newcommand{\post}{\mathsf{Post}}

    % Set of reachable states (indirect succesors via finite path fragment)
    \newcommand{\postast}{\mathsf{Post}^{\ast}}

    % The above as functions on (#1).
    \newcommand{\fpost}[1]{\post_{#1}}
    \newcommand{\fpostast}[1]{\postast\!\!_{#1}}
 }

% ------ LuaTeX stuff ------ %
\ifLuaTeX\if@kzflgit

% Inject short git commit hash
\newcommand{\githash}{%
    \directlua{%
        tex.print(io.popen"git rev-parse --short HEAD":read'*l')%
    }%
}

% Queries the dirty status of the current project
\directlua{%
    function get_dirty()
        local status = io.popen"git status --porcelain":read'*l'
        return not (status == nil or status == '')
    end

    dirty = get_dirty()
}%

% Prints dirty status as 1/0
\newcommand{\dirty}[0]{%
    \protect\directlua{%
        if dirty then
            tex.print("1")
        else
            tex.print("0")
        end
    }%
}

% Prints "+" if dirty, otherwise nothing
\newcommand{\dirtyplus}{%
    \protect\directlua{%
        if dirty then
            tex.print("+")
        end
    }%
}

\fi\fi % \if@kzflgit\ifLuaTeX ------------ %

% Drawing Finite Automata
\newcommand{\tikzfosap}{%
    \usetikzlibrary{automata, positioning, arrows, shapes.geometric}%
    \tikzset{%
        ->, % gerichtete Kanten
        >=stealth, % dicke Pfeile
        node distance=3cm, % min. Distanz zwischen Knoten
        every state/.style={thick, fill=gray!10}, % `state` Farbe und Dicke
        elliptic/.style={draw,ellipse},%
        initial text=$ $, % Text auf dem ersten Pfeil
        tree node/.style={fill=fosapblue, text=white, draw, circle, minimum width=0.85cm},%
        tree leaf/.style={fill=fosappink, text=black, rectangle,  minimum height=0.5cm,   minimum width=0.5cm,},%
    }
}

% lstlistings style
\newcommand{\codestyle}{%
    \lstdefinestyle{krnz_code}{%
        backgroundcolor=\color{backcolour},%
        commentstyle=\color{codegreen},%
        keywordstyle=\color{magenta},%
        numberstyle=\tiny\color{codegray},%
        stringstyle=\color{codepurple},%
        basicstyle=\ttfamily\footnotesize,%
        breakatwhitespace=false,%
        breaklines=true,%
        captionpos=b,%
        keepspaces=true,%
        numbers=left,%
        numbersep=5pt,%
        showspaces=false,%
        showstringspaces=false,%
        showtabs=false,%
        tabsize=2%
    }%
    \lstset{style=krnz_code}%
}

\DeclareOption{fpmarks}{
% Folding and Punchhole marks according to DIN 5008 (Type A, A4)
    \newcommand\foldmarklength{3mm}
    \newcommand\punchmarklength{4mm}
    \newcommand\markhpos{3.5mm}
    \newcommand\markthickness{.2mm}
    \newcommand\leftmarkline[1]{%
        \parbox[c][\layerheight][b]{\layerwidth}{%
            \hspace*{\markhpos}\rule{#1}{\markthickness}%
    }}
    \newcommand{\fpmarks}[0]{

        \DeclareNewLayer[{
            background,
            innermargin,
            oddpage,% in twoside mode only on odd pages!
            height=87mm,
            contents={\leftmarkline{3mm}}
        }]{tfoldmark}
        \DeclareNewLayer[{
            clone=tfoldmark,
            height=192mm
        }]{bfoldmark}
        \DeclareNewLayer[{
            clone=tfoldmark,
            height=0.5\pageheight,
            contents={\leftmarkline{4mm}}
        }]{punchmark}
        \AddLayersToPageStyle{@everystyle@}{tfoldmark,bfoldmark,punchmark}
    }
}

\ProcessOptions\relax

\if@kzflboilerplate
    \kzfl@injectboilerplate
\fi

\if@kzflthm
    \kzfl@injecttheorems
\fi

% ------ Environment variables ------ %
\newcommand{\semester}[2][]{\def\@semester{#2}\def\@semestershort{#1}}
\def\@semester{}
\def\@semestershort{}
\newcommand{\class}[1]{\def\@class{#1}}
\def\@class{}
\newcommand{\assignment}[1]{\def\@assignment{#1}}
\def\@assignment{}
\newcommand{\titlemisc}[1]{\def\@titlemisc{#1}}
\def\@titlemisc{\,}

% ------ Layers with matriculation numbers etc. ------ %
\if@kzfllayers
    \AtBeginDocument{%
        \thispagestyle{empty}%
        \makeatother%
        % We read the csv only ONCE at BeginDocument, and save the string with the ID nums
        \def\@kzflmatrnrline%
            {\csvreader[before line={\ifcsvfirstrow{}{~$\vert$~}}]
                {\groupcsv}
                {matrnr=\matrnr}{\texttt{\matrnr}}}%
        \makeatletter%
    }
    \ofoot{\normalfont$\thepage\mathbin{/}\ztotpages$}
    \cfoot{}
    \ifoot{\@kzflmatrnrline}
    \ohead{\scshape \MakeLowercase{\@class{}~\@semestershort}}
    \ihead{\scshape \MakeLowercase\@assignment}
\fi



% ------ Group Roster Table ------- %
% This needs to be BELOW ProcessOptions, since it relies
% on @kzflenglish being set.

% Path to CSV
% Default path: working directory/group.csv
\def \groupcsv{group.csv}
% Command to update csv path
\newcommand{\usegroupcsv}[1]{\def \groupcsv{#1}}

\if@kzflenglish
    \def\@rosternames{First, Last Name}
    \def\@rosterids{ID}
\else
    \def\@rosternames{Vor-, Nachname}
    \def\@rosterids{Matr.-Nr.}
\fi

\newcommand{\makegrouproster}{%
    \begin{center}%
        \vspace{0.5\baselineskip}%
        \csvreader[tabular=|l|c|,%
            table head=\hline\bfseries{\hfill\@rosternames\hfill} & \bfseries{\@rosterids}\\\hline,%
            late after line=\\,%
            late after last line=\\\hline%
        ]{\groupcsv}%
        {name=\name, matrnr=\matrnr}%
        {\name & \texttt{\matrnr}}%
    \end{center}
}

% Exercise sect
\if@kzflenglish
    \newcommand{\@exercisetext}{Exercise}
\else
    \newcommand{\@exercisetext}{Aufgabe}
\fi
\newcommand{\exercise}[1]{\section*{\@exercisetext{} {#1}}}
\newcommand{\subexercise}[1]{\paragraph*{({#1})}}



% Simple colors that are not as harsh as the default ones.
\RequirePackage{xcolor}

\definecolor{kzfl-blue}{cmyk}{1,.5,0,0}
\definecolor{kzfl-black}{cmyk}{0,0,0,1}
\definecolor{kzfl-magenta}{cmyk}{0,1,.25,0}
\definecolor{kzfl-yellow}{cmyk}{0,0,1,0}
\definecolor{kzfl-petrol}{cmyk}{1,.3,.5,.3}
\definecolor{kzfl-turquoise}{cmyk}{1,0,.4,0}
\definecolor{kzfl-green}{cmyk}{.7,0,1,0}
\definecolor{kzfl-maygreen}{cmyk}{.35,0,1,0}
\definecolor{kzfl-orange}{cmyk}{0,.4,1,0}
\definecolor{kzfl-red}{cmyk}{.15,1,1,0}
\definecolor{kzfl-bordeaux}{cmyk}{.25,1,.7,.2}
\definecolor{kzfl-violet}{cmyk}{.6,.6,0,0}
\definecolor{kzfl-purple}{cmyk}{.7,1,.35,.15}
\definecolor{kzfl-silver}{cmyk}{.39,.31,.32,.14}
\definecolor{kzfl-gold}{cmyk}{.35,.46,.7,.35}

% ------ Little things to make my life easier ------ %
% Returns either the function name (#2) or function(#1) if called with the optional argument
\newcommand{\functionorname}[2][]{
    {\ensuremath{%
        {\operatorname{\mathsf{#2}}}%
        {\Ifstr{#1}{}{}{%
            \left(#1\right)%
        }}%
    }}%
}

% Inserts string centerd between horizontal lines
% Stolen from https://tex.stackexchange.com/questions/243651/center-text-between-horizontal-lines-extending-to-the-margin-on-either-side
\newcommand{\strhrule}[2][.4pt]{%
    \par\vspace{\topsep}
    \noindent\makebox[\textwidth]{%
        \sbox0{#2}%
        \dimen0=.5\dimexpr\ht0+#1\relax
        \dimen2=-.5\dimexpr\ht0-#1\relax
        \leaders\hrule height \dimen0 depth \dimen2\hfill
        \quad #2\quad
        \leaders\hrule height \dimen0 depth \dimen2\hfill
    }\par\nopagebreak\vspace{\topsep}
}

% Better enumerations
\renewcommand{\theenumi}{\roman{enumi}}
\renewcommand{\labelenumi}{(\theenumi)}
\renewcommand{\theenumii}{\alph{enumii}}
\renewcommand{\labelenumii}{(\theenumii)}
\renewcommand{\theenumiii}{\arabic{enumiii}}
\renewcommand{\labelenumiii}{(\theenumiii)}

% Common macros
\newcommand{\ds}[1]{\,\,{#1}\,\,}
\newcommand{\sothat}{\ds|}
\newcommand{\qed}{\ensuremath{\largesquare}}
\newcommand{\qedright}{\hfill\qed}
\newcommand{\qea}{\lightning}

% Common math sets
\newcommand{\C}{\ensuremath{\mathbb C}}
\newcommand{\RR}{\ensuremath{\mathbb R}}
\newcommand{\Q}{\ensuremath{\mathbb Q}}
\newcommand{\Z}{\ensuremath{\mathbb Z}}
\newcommand{\N}{\ensuremath{\mathbb N}}

% Common mathcal letters
\newcommand{\calA}{\ensuremath{\mathcal A}}
\newcommand{\calB}{\ensuremath{\mathcal B}}
\newcommand{\calM}{\ensuremath{\mathcal M}}
\newcommand{\calD}{\ensuremath{\mathcal D}}
\newcommand{\calP}{\ensuremath{\mathcal P}}

% ------ All things logic ------ %

% Logic - Common Structures and Fraktur Symbols
\newcommand{\fA}{\ensuremath{\mathfrak A}}
\newcommand{\fB}{\ensuremath{\mathfrak B}}
\newcommand{\I}{\ensuremath{\mathfrak I}} % Also complex analysis
\newcommand{\R}{\ensuremath{\mathfrak R}} % Also complex analysis

% Logic - Operators
\newcommand{\xor}{\ensuremath{\oplus}}
\newcommand{\impl}{\ensuremath{\rightarrow}}

% Set theory stuff
\newcommand{\acc}[1]{\ensuremath{\operatorname{acc}\left({#1}\right) }}

% Logic - Interpretation
\newcommand{\intp}[2]{%
    \ensuremath{%
        \left\llbracket{#2}\right\rrbracket^{\mathfrak{#1}}
    }%
}

% Logic - Function stuff

% Bijective twohead hook right arrow
\newcommand{\bij}{%
  \hookrightarrow\mathrel{\mspace{-12.5mu}}\rightarrow
}

% Surjective twohead rightarrow (x) variant
\newcommand{\xtwoheadrightarrow}[2][]{%
  \xrightarrow[#1]{#2}\mathrel{\mkern-12.5mu}\rightarrow
}

% Injective
\newcommand{\inj}{%
  \hookrightarrow
}

% Logic - Modal stuff

% Raw Logic Symbols
\newcommand{\lusymbol}{\mathlmss{U}}
\newcommand{\lrsymbol}{\mathlmss{R}}
\newcommand{\lnextsymbol}{\bigcirc}
\newcommand{\leventuallysymbol}{\lozenge}
\newcommand{\lgloballysymbol}{\square}
\newcommand{\lprobsymbol}{\mathbb{P}}

% Base Until
\newcommand{\lu}{\ensuremath{\mathbin{\lusymbol}}}
% Until with superscript
\newcommand{\lusup}[1]{\ensuremath{\mathbin{\lusymbol^{#1}}}}
% Until with interval superscript
\newcommand{\luint}[2]{\lusup{[#1, #2]}}
% Until with <= superscript
\newcommand{\lun}[1]{\lusup{\leq #1}}

% Base Release
\newcommand{\lr}{\ensuremath{\mathbin{\lrsymbol}}}

% Next/eventually/globally
\newcommand{\lnext}{\ensuremath{\mathord{\lnextsymbol}}}
\newcommand{\levent}{\ensuremath{\mathord{\leventuallysymbol}}}
\newcommand{\leventn}[1]{\ensuremath{\levent^{\leq #1}}}
\newcommand{\lglob}{\ensuremath{\mathord{\lgloballysymbol}}}

% Misc symbols
\newcommand{\ltrue}{\texttt{true}}
\newcommand{\lfalse}{\texttt{false}}
\newcommand{\quant}{\mathfrak{Q}}

% Set shortcuts
\newcommand{\ap}{\ensuremath{\mathsf{AP}}}
\newcommand{\act}{\ensuremath{\mathsf{Act}}}


% Variables
\newcommand{\var}[2][]{%
    \expandafter\ensuremath{%
        \expandafter\hat{#2}%
            \Ifstr{#1}{}{}{_{#1}}%
        }%
    }%

% Sequences
\newcommand{\seq}[1]{\ensuremath{\overline{#1}}}
% Sequences of variables
\newcommand{\seqvar}[1]{\ensuremath{\tilde{#1}}}

% (Path) Traces
\newcommand{\trace}{\ensuremath{\mathsf{trace}}}

% Inserts [a]tomic [p]roposition (#2) [m]arked with a variable (#3) and optionally index [#1]
% -> Not using an optarg would result int \var{a_b} which would make the hat a little lopsided
%    and I can't live with that...
\newcommand{\apm}[3][]{%
    \ensuremath{%
        {#2}_{%
            \var[#1]{#3}
        }%
    }%
}
