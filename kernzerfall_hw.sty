%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%- kernzerfall's LaTeX Theme for Homework -%%%%
%%%%-                                        -%%%%
%%%%- Revision: Ra-22.11.2023                -%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% ------ Requirements ------ %
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{kernzerfall_hw}[kernzerfall's LaTeX theme for Homework]
\RequirePackage[hidelinks]{hyperref}
\RequirePackage{csvsimple}
\RequirePackage{bookmark}
\RequirePackage{iftex}

% ------ Inject boilerplate ------ %
\newcommand{\boilerplate}{
    % Geometry
    \usepackage[a4paper, top=2cm, left=2cm, right=2cm]{geometry}

    % Math Symbols
    \usepackage{amsmath}
    \usepackage{amssymb}
    \usepackage{mathtools}
    \usepackage{microtype}
    \usepackage{stmaryrd}

    % Graphics
    \usepackage{tikz}
    \usepackage{graphicx}
    \usepackage{pdfpages}

    % Fonts/Encoding
    \usepackage{lmodern}
    \usepackage[utf8]{inputenc}
    \usepackage[utf8]{luainputenc}
    \usepackage[T1]{fontenc}
    \usepackage[english, ngerman]{babel}
    \usepackage{xcolor}
    \usepackage{tgpagella}

    % Other
    \usepackage{scrlayer-scrpage}
    \usepackage{draftwatermark}
    \usepackage[capitalize]{cleveref}
    \usepackage{framed}

    % Colors
    \definecolor{codegreen}{rgb}{0,0.6,0}%
    \definecolor{codegray}{rgb}{0.5,0.5,0.5}%
    \definecolor{codepurple}{rgb}{0.58,0,0.82}%
    \definecolor{backcolour}{rgb}{0.95,0.95,0.92}%
    \definecolor{fosapblue}{RGB}{0,128,255}%
    \definecolor{fosappink}{RGB}{252,163,212}%

    % Default to no watermark, user can override this using the same command
    \DraftwatermarkOptions{
        scale=0, text={}
    }

    % KOMA classes have sf fonts in headers by default...
    \ifdef\chapter{
        \setkomafont{chapter}{\normalfont\huge\bfseries}
        \setkomafont{section}{\normalfont\LARGE\bfseries}
    }{    
        \setkomafont{section}{\normalfont\Large\bfseries}
    }

    \setkomafont{title}{\normalfont\huge}
    \setkomafont{subsection}{\normalfont\Large\bfseries}
    \setkomafont{subsubsection}{\normalfont\Large\bfseries}
    \setkomafont{paragraph}{\normalfont\bfseries}
    \setkomafont{subparagraph}{\normalfont\bfseries}
}

% ------ Therorem stuff ------ %
\DeclareOption{thm}{
    \RequirePackage[amsmath, amsthm, thmmarks]{ntheorem}
    
    % def/thm numbering
        \theoremheaderfont{\normalfont\bfseries}
        \theorembodyfont{\normalfont}
        \theoremseparator{.}
        \newtheoremstyle{kzflthm}%
            {\item[%
                \hskip\labelsep\theorem@headerfont% 
                    ####1~####2%
                \theorem@separator]}%
            {\item[%
                \hskip\labelsep\theorem@headerfont%
                    ####1~####2~~\normalfont(####3)%
                \theorem@separator]}
        \theoremstyle{kzflthm}
        \theoremsymbol{\ensuremath{\triangle}}
    
        \newtheorem{definition}{Definition}[section]    
        \newtheorem{thm}[definition]{Theorem}    
        \newtheorem{satz}[definition]{Satz}
        \newtheorem{lemma}[definition]{Lemma}
        \newtheorem{kor}[definition]{Korollar}
}

% ------ Metadata ------ %
\AtBeginDocument{
	\hypersetup{bookmarksnumbered=true,%
	}
}

% ------ Environment variables ------ %
\newcommand{\group}[1]{\renewcommand{\group}{#1}}
\newcommand{\@group}{}
\newcommand{\class}[1]{\renewcommand{\class}{#1}}
\newcommand{\@class}{}
\newcommand{\assignment}[1]{\renewcommand{\assignment}{#1}}
\newcommand{\@assignment}{}
\def \teamname{\,}
\newcommand{\team}[1]{\def \teamname{#1}}

% ------ Group Roster Table ------- %

% Path to CSV
% Default path: working directory/group.csv
\def \groupcsv{group.csv}
% Command to update csv path
\newcommand{\usegroupcsv}[1]{\def \groupcsv{#1}}

\newcommand{\makegrouproster}{%
    \begin{center}%
        \vspace{2em}%
        \csvreader[tabular=|l|c|,%
            table head=\hline\bfseries{Vor- und Nachname} & \bfseries{Matrikelnummer}\\\hline,%
            late after line=\\,%
            late after last line=\\\hline%
        ]{\groupcsv}%
        {name=\name, matrnr=\matrnr}%
        {\name & \matrnr}%
    \end{center}
}

% ------ Maketitle ------ %
\DeclareOption{customtitle}{
    \renewcommand{\maketitle}%
    {%
        \title{\assignment}%
        \if \teamname {\,}%
            \author{\group}%
        \else%
            \author{\group~-~\teamname}%
        \fi%
        \subject{\class}%
        \hypersetup{%
            pdftitle={\@title},
            pdfauthor={\@author},
            pdfsubject={\@subject}
        }%
        \begin{center}%
            \titlefont%
            \large{\class\hfill\group} \\
            \normalsize{\assignment\hfill\teamname}\\
            \normalfont%
        \end{center}%
    }%
}

% ------ Little things to make my life easier ------ %

% Better enumerations
\renewcommand{\theenumi}{\roman{enumi}}
\renewcommand{\labelenumi}{(\theenumi)}
\renewcommand{\theenumii}{\alph{enumii}}
\renewcommand{\labelenumii}{(\theenumii)}
\renewcommand{\theenumiii}{\arabic{enumiii}}
\renewcommand{\labelenumiii}{(\theenumiii)}

% Common macros
\newcommand{\sothat}{\,\,|\,\,}
\newcommand{\ds}[1]{\,\,{#1}\,\,}
\newcommand{\qed}{$\square$}
\newcommand{\qedright}{\hfill\qed}
\newcommand{\qea}{\lightning}

% Common math sets
\newcommand{\C}{\ensuremath{\mathbb C}}
\newcommand{\RR}{\ensuremath{\mathbb R}}
\newcommand{\Q}{\ensuremath{\mathbb Q}}
\newcommand{\Z}{\ensuremath{\mathbb Z}}
\newcommand{\N}{\ensuremath{\mathbb N}}

% Common mathcal letters
\newcommand{\calA}{\ensuremath{\mathcal A}}
\newcommand{\calB}{\ensuremath{\mathcal B}}

% Logic - Common Structures and Fraktur Symbols
\newcommand{\fA}{\ensuremath{\mathfrak A}}
\newcommand{\fB}{\ensuremath{\mathfrak B}}
\newcommand{\I}{\ensuremath{\mathfrak I}} % Also complex analysis
\newcommand{\R}{\ensuremath{\mathfrak R}} % Also complex analysis

% Logic - Operators
\newcommand{\xor}{\ensuremath{\oplus}}
\newcommand{\impl}{\ensuremath{\rightarrow}}

% Set theory stuff
\newcommand{\acc}[1]{\ensuremath{\operatorname{acc}\left({#1}\right) }}

% Logic - Interpretation
\newcommand{\intp}[2]{%
    \ensuremath{%
        \left\llbracket{#2}\right\rrbracket^{\mathfrak{#1}}
    }%
}

% Logic - Function stuff

% Bijective twohead hook right arrow
\newcommand{\bij}{%
  \hookrightarrow\mathrel{\mspace{-15mu}}\rightarrow
}

% Injective
\newcommand{\inj}{%
  \hookrightarrow
}

% ------ Complexity Stuff ------ %
\DeclareOption{complexity}{
    % Ex(ists configuration) path
    \newcommand{\expath}{\ensuremath{\stackrel\ast\to}}

    % Common Alphabet syms
    \newcommand{\sast}{\ensuremath{\Sigma^\ast}}
    \newcommand{\gast}{\ensuremath{\Gamma^\ast}}
    \newcommand{\gk}[1]{\ensuremath{\Gamma^{#1}}}

    % Configuration stuff
    \newcommand{\kinit}{\ensuremath{\kappa_{\text{init}}}}

    % Markers (mend = end marker, blk = blank)
    \newcommand{\mend}{\ensuremath{\triangleright}}
    \newcommand{\blk}{\ensuremath{\square}}

    % Classes
    \newcommand{\classO}[1]{\ensuremath{\mathcal{O}\left({#1}\right)}}
    \newcommand{\classDT}[1]{\ensuremath{\mathsf{DTIME}\left({#1}\right)}}
    \newcommand{\classP}{\ensuremath{\mathsf{P}}}
    \newcommand{\classE}{\ensuremath{\mathsf{E}}}
    \newcommand{\classEXPTIME}{\ensuremath{\mathsf{EXPTIME}}}
    \newcommand{\classNT}[1]{\ensuremath{\mathsf{NTIME}\left({#1}\right)}}
    \newcommand{\classNP}{\ensuremath{\mathsf{NP}}}
    \newcommand{\classNEXP}{\ensuremath{\mathsf{NEXP}}}
    \newcommand{\classEXP}{\ensuremath{\mathsf{EXP}}}
    \newcommand{\classPpoly}{\ensuremath{%
    	\classP\!/_{\!\mathsf{poly}}%
    }}
    \newcommand{\coclass}[1]{\ensuremath{%
    	\mathsf{co}\text{-}{#1}%
    }}
    \newcommand{\classPHsigma}[1]{\ensuremath{
    	\mathsf{\Sigma}^p_{#1}%
    }}
    \newcommand{\classPHpi}[1]{\ensuremath{
    	\mathsf{\Pi}^p_{#1}%
    }}

    % Common states
    \newcommand{\qacc}{\ensuremath{q_{+}}}
    \newcommand{\qrej}{\ensuremath{q_{-}}}
    \newcommand{\qinit}{\ensuremath{q_{\text{init}}}}
}

% ------ LuaTeX stuff ------ %
\ifLuaTeX

% Inject short git commit hash
\newcommand{\githash}{%
    \directlua{%
        tex.print(io.popen"git rev-parse --short HEAD":read'*l')%
    }%
}

% Queries the dirty status of the current project
\directlua{%
    function get_dirty()
        local status = io.popen"git status --porcelain":read'*l'
        return not (status == nil or status == '')
    end

    dirty = get_dirty()
}%

% Prints dirty status as 1/0
\newcommand{\dirty}[0]{%
    \protect\directlua{%
        if dirty then
            tex.print("1")
        else
            tex.print("0")
        end
    }%
}

% Prints "+" if dirty, otherwise nothing
\newcommand{\dirtyplus}{%
    \protect\directlua{%
        if dirty then
            tex.print("+")
        end
    }%
}

\fi % \ifLuaTeX ------------ %

% Drawing Finite Automata
\newcommand{\tikzfosap}{%
    \usetikzlibrary{automata, positioning, arrows, shapes.geometric}%
    \tikzset{%
        ->, % gerichtete Kanten
        >=stealth, % dicke Pfeile
        node distance=3cm, % min. Distanz zwischen Knoten
        every state/.style={thick, fill=gray!10}, % `state` Farbe und Dicke
        elliptic/.style={draw,ellipse},%
        initial text=$ $, % Text auf dem ersten Pfeil
        tree node/.style={fill=fosapblue, text=white, draw, circle, minimum width=0.85cm},%
        tree leaf/.style={fill=fosappink, text=black, rectangle,  minimum height=0.5cm,   minimum width=0.5cm,},%
    }
}

% lstlistings style
\newcommand{\codestyle}{%
    \lstdefinestyle{krnz_code}{%
        backgroundcolor=\color{backcolour},%
        commentstyle=\color{codegreen},%
        keywordstyle=\color{magenta},%
        numberstyle=\tiny\color{codegray},%
        stringstyle=\color{codepurple},%
        basicstyle=\ttfamily\footnotesize,%
        breakatwhitespace=false,%
        breaklines=true,%
        captionpos=b,%
        keepspaces=true,%
        numbers=left,%
        numbersep=5pt,%
        showspaces=false,%
        showstringspaces=false,%
        showtabs=false,%
        tabsize=2%
    }%
    \lstset{style=krnz_code}%
}

\DeclareOption{fpmarks}{
% Folding and Punchhole marks according to DIN 5008 (Type A, A4)
    \newcommand\foldmarklength{3mm}
    \newcommand\punchmarklength{4mm}
    \newcommand\markhpos{3.5mm}
    \newcommand\markthickness{.2mm}
    \newcommand\leftmarkline[1]{%
        \parbox[c][\layerheight][b]{\layerwidth}{%
            \hspace*{\markhpos}\rule{#1}{\markthickness}%
    }}
    \newcommand{\fpmarks}[0]{

        \DeclareNewLayer[{
            background,
            innermargin,
            oddpage,% in twoside mode only on odd pages!
            height=87mm,
            contents={\leftmarkline{3mm}}
        }]{tfoldmark}
        \DeclareNewLayer[{
            clone=tfoldmark,
            height=192mm
        }]{bfoldmark}
        \DeclareNewLayer[{
            clone=tfoldmark,
            height=0.5\pageheight,
            contents={\leftmarkline{4mm}}
        }]{punchmark}
        \AddLayersToPageStyle{@everystyle@}{tfoldmark,bfoldmark,punchmark}
    }
}

\ProcessOptions\relax
